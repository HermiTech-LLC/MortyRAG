name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: Prepare directories and check for existing knowledge base
      run: |
        mkdir -p data/processed
        if [ ! -f "data/processed/vectorizer_v1.pkl" ]; then
          echo "Knowledge base binaries not found. Running setup script..."
          python src/data_ingestion.py  # Replace with your setup script if different
        else
          echo "Knowledge base binaries found. Skipping setup."
        fi

    - name: Run unit tests
      run: |
        mkdir -p test-results
        pytest --junitxml=test-results/results.xml --maxfail=5 --disable-warnings
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results
        path: test-results/results.xml

    - name: Lint codebase
      run: |
        pip install flake8
        flake8 . --exit-zero --output-file=lint-results.txt
      continue-on-error: true

    - name: Upload lint results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: lint-results
        path: lint-results.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Package the application into a Linux executable
      run: pyinstaller --onefile --name MortRAG src/main.py  # Adjust to use your main.py script

    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: linux-executable
        path: dist/MortRAG

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download executable from previous job
      uses: actions/download-artifact@v3
      with:
        name: linux-executable
        path: dist/

    - name: Make executable runnable
      run: chmod +x dist/MortRAG

    - name: Run the executable
      run: ./dist/MortRAG --help  # Replace with your desired command to test the executable

    - name: Notify of deployment success
      run: echo "Executable MortRAG has been built and tested successfully!"