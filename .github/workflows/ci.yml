name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Prepare directories and check for existing knowledge base
      run: |
        mkdir -p data/processed
        if [ ! -f "data/processed/vectorizer_v1.pkl" ]; then
          echo "Knowledge base binaries not found. Running setup script..."
          python src/data_ingestion.py  # Run your data ingestion or setup script here
        else
          echo "Knowledge base binaries found. Skipping setup."
        fi

    - name: Run unit tests
      run: |
        mkdir -p test-results
        python -m unittest discover -s tests > test-results/unit-test-results.txt
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results
        path: test-results/unit-test-results.txt

    - name: Lint codebase
      run: |
        pip install flake8
        flake8 . --output-file=lint-results.txt || true
      continue-on-error: true

    - name: Upload lint results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: lint-results
        path: lint-results.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Package the application into an executable
      run: pyinstaller --onefile --name your_executable_name src/main.py  # Adjust to use your main.py script

    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: your-executable
        path: dist/your_executable_name